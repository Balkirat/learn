name: CI

on:
  push:
    branches:
    - master
    - develop
    - feature/'*'
  pull_request:
    branches:
    - master
    - develop

jobs:
  # build:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       node_version: [13]
  #       os: [ubuntu-latest, windows-latest, macOS-latest]

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Use Node.js ${{ matrix.node_version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node_version }}


  #   - name: Get yarn cache directory path
  #     id: yarn-cache-dir-path
  #     run: echo "::set-output name=dir::$(yarn cache dir)"

  #   - uses: actions/cache@v1
  #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
  #     with:
  #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-yarn-


  #   # Run scripts separately for easier debugging.
  #   - name: Install & build
  #     run: yarn install --frozen-lock-file
  #   - name: Lint
  #     run: yarn lint
  #   - name: Test and coverage
  #     run: yarn coverage

  publish:
    runs-on: ubuntu-latest
    # needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BRANCH}"
        env:
          BRANCH: ${{ github.ref }}

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Run scripts separately for easier debugging.
      - name: Install
        run: yarn install --frozen-lock-file

      # NOTE: Workaround for https://github.community/t5/GitHub-Actions/How-to-push-to-protected-branches-in-a-GitHub-Action/td-p/29609
      - name: Temporarily disable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}

      # - name: Generate .npmrc
      #   run: touch ~/.npmrc; echo "https://npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Publish
        run: yarn publish:ci ${{ secrets.NPM_TOKEN }}

      - name: Enable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()  # Force to always run this step to ensure "include administrators" is always turned back on
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}
          owner: benjefferies
          repo: branch-protection-bot
